const c=t=>t.urls.api_v1,i=t=>`${t.urls.api_v1}/admin`,u=t=>`${t.urls.api_v1}/ott_staff`,r=t=>({Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${t.api.token}`}),e={"X-Requested-With":"XMLHttpRequest","X-CSRF-Token":document.querySelector("meta[name=csrf-token]").content,"Content-Type":"application/json"},f=t=>{document.querySelector("meta[name=csrf-token]").content=t,e["X-CSRF-Token"]=t},p=async t=>{const n=await fetch("../admin/tokens/index.html",{method:"POST",headers:e}),o=await s(n);o.token&&(t.api.token=window.VHX.config.token=o.token)},a=async t=>{try{return await t.json()}catch{return{message:t!=null&&t.ok?"success":"error"}}},s=async t=>{try{const n=await a(t);return t!=null&&t.ok?Promise.resolve(n):Promise.reject({status:t==null?void 0:t.status,statusText:t==null?void 0:t.statusText,message:n==null?void 0:n.message})}catch{return Promise.reject({status:t==null?void 0:t.status,statusText:t==null?void 0:t.statusText})}},l=(t={})=>Object.keys(t).map(n=>{if(t[n]||t[n]===!1||t[n]==0)return typeof t[n]=="object"?`${n}=${encodeURIComponent(JSON.stringify(t[n]))}`:`${n}=${encodeURIComponent(t[n])}`}).filter(n=>!!n).join("&");export{i as a,c as b,p as c,f as d,r as f,e as i,l as j,s as r,u as s};
//# sourceMappingURL=fetch.74022fd8.js.map
